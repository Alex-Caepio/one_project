openapi: 3.0.0
info:
  version: 1.0.0
  title: ""
  description: ""
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/cleverketchup/tom/1.0.0
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    AccessToken:
      type: object
      properties:
        abilities:
          type: array
          items:
            type: string
          example:
            - "*"
        name:
          type: string
          example: access-token
        token:
          type: string
          example: 4|hKv4yyJYSZlBDuuZmOcy5AO2ZzPbRJCp6gfbRGvvponscCQzetB51kh1p1Hsis1R2FnKJ5z0gHN4mJll
    Article:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        user_id:
          type: integer
        is_published:
          type: boolean
        introduction:
          type: string
        url:
          type: string
    Discipline:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        url:
          type: string
        introduction:
          type: string
        description:
          type: string
    FocusArea:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        url:
          type: string
        introduction:
          type: string
        description:
          type: string
    Keyword:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
    Location:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
    Plan:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        stripe_id:
          type: integer
        price:
          type: string
        service_types:
          type: string
    PromotionCode:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        valid_from:
          type: string
          format: date-time
          nullable: true
        expiry_date:
          type: string
          format: date-time
          nullable: true
        spend_min:
          type: number
          format: double
          nullable: true
        spend_max:
          type: number
          format: double
          nullable: true
        discount_type:
          type: string
        discount_value:
          type: number
          format: double
        service_type_id:
          type: integer
          nullable: true
        discipline_id:
          type: integer
          nullable: true
        focus_area_id:
          type: integer
          nullable: true
        max_uses_per_code:
          type: integer
          nullable: true
        code_uses_per_customer:
          type: integer
          nullable: true
    Schedule:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        service_id:
          type: integer
        start_date:
          type: string
          format: date-time
          nullable: true
        end_date:
          type: string
          format: date-time
          nullable: true
        cost:
          type: number
          format: double
    Service:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        locations:
          type: string
          nullable: true
        basic_location:
          type: string
          nullable: true
        deposit_instalment_payments:
          type: string
          nullable: true
        user_id:
          type: integer
        is_published:
          type: boolean
          nullable: true
        introduction:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
    ServiceType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          example: 6
        about_me:
          type: string
          nullable: true
        about_my_business:
          type: string
          nullable: true
        account_type:
          type: string
          example: practitioner
        business_address:
          type: string
          nullable: true
        business_email:
          type: string
          nullable: true
        business_introduction:
          type: string
          nullable: true
        business_name:
          type: string
          nullable: true
        business_phone_number:
          type: string
          nullable: true
        date_of_birth:
          type: string
          nullable: true
        email:
          type: string
          example: mmorissette@example.net
        email_forward_clients:
          type: boolean
          example: true
        email_forward_practitioners:
          type: boolean
          example: true
        email_forward_support:
          type: boolean
          example: true
        email_verified_at:
          type: string
          format: date-time
          nullable: true
        emails_holistify_update:
          type: boolean
          example: true
        emails_practitioner_offers:
          type: boolean
          example: true
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Doe
        is_published:
          type: boolean
          example: true
        mobile_number:
          type: string
          nullable: true
        public_link:
          type: string
          nullable: true
          example: example.com/users/johndoe
        stripe_id:
          type: string
          example: cus_HpyQPawZU9Nw16
        timezone_id:
          type: integer
          example: 98
paths:
  /api/auth/register:
    post:
      operationId: register
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: mmorissette@example.net
                password:
                  type: string
                  example: qwerty
                first_name:
                  type: string
                  example: qwerty
                last_name:
                  type: string
                  example: qwerty
                account_type:
                  type: string
                  enum:
                    - client
                    - practitioner
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 6
                  about_me:
                    type: string
                    nullable: true
                  about_my_business:
                    type: string
                    nullable: true
                  account_type:
                    type: string
                    example: practitioner
                  business_address:
                    type: string
                    nullable: true
                  business_email:
                    type: string
                    nullable: true
                  business_introduction:
                    type: string
                    nullable: true
                  business_name:
                    type: string
                    nullable: true
                  business_phone_number:
                    type: string
                    nullable: true
                  date_of_birth:
                    type: string
                    nullable: true
                  email:
                    type: string
                    example: mmorissette@example.net
                  email_forward_clients:
                    type: boolean
                    example: true
                  email_forward_practitioners:
                    type: boolean
                    example: true
                  email_forward_support:
                    type: boolean
                    example: true
                  email_verified_at:
                    type: string
                    format: date-time
                    nullable: true
                  emails_holistify_update:
                    type: boolean
                    example: true
                  emails_practitioner_offers:
                    type: boolean
                    example: true
                  first_name:
                    type: string
                    example: John
                  last_name:
                    type: string
                    example: Doe
                  is_published:
                    type: boolean
                    example: true
                  mobile_number:
                    type: string
                    nullable: true
                  public_link:
                    type: string
                    nullable: true
                    example: example.com/users/johndoe
                  stripe_id:
                    type: string
                    example: cus_HpyQPawZU9Nw16
                  timezone_id:
                    type: integer
                    example: 98
                  access_token:
                    $ref: "#/components/schemas/AccessToken"
        "422":
          description: Validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The given data was invalid.
                  errors:
                    type: object
                    example:
                      password:
                        - The password format is invalid.
                      first_name:
                        - The first name may not be greater than 30 characters.
                      last_name:
                        - The last name may not be greater than 30 characters.
  /api/auth:
    get:
      operationId: get-current-user-info
      tags:
        - Auth
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/paths/~1api~1auth~1register/post/responses/200/content/application~1js\
                  on/schema"
  /api/auth/login:
    post:
      operationId: login
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: mmorissette@example.net
                password:
                  type: string
                  example: qwerty
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/paths/~1api~1auth~1register/post/responses/200/content/application~1js\
                  on/schema"
  /api/auth/profile/publish:
    post:
      operationId: client-publish-profile
      tags:
        - Auth
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "422":
          description: Validation errors
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: The given data was invalid.
                  errors:
                    type: object
                    example:
                      business_name:
                        - You have not filled in the field "Business name"
                      business_address:
                        - You have not filled in the field "Business address"
                      business_email:
                        - You have not filled in the field "Business email"
                      business_introduction:
                        - You have not filled in the field "Business
                          introduction"
  /api/auth/forgot-password-ask:
    post:
      operationId: ask-for-password-reset
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  example: mmorissette@example.net
      responses:
        "200":
          description: OK
  /api/auth/forgot-password-claim:
    post:
      operationId: clain-password-reset
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - token
                - password
              properties:
                token:
                  type: string
                  example: qd723bxqwp0qam2ey37cvbwasu
                password:
                  type: string
                  example: Qwer1234!
      responses:
        "200":
          description: OK
  /api/auth/verify-forgot-password-token:
    post:
      operationId: verify-forgot-password-token
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
                  example: qd723bxqwp0qam2ey37cvbwasu
      responses:
        "200":
          description: OK
        "422":
          description: Token has expired
  /articles:
    post:
      tags:
        - Article
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Article"
    get:
      tags:
        - Article
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Article"
  "/articles/{id}":
    get:
      tags:
        - Article
      parameters:
        - name: id
          in: path
          description: Article ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Article"
    put:
      tags:
        - Article
      parameters:
        - $ref: "#/paths/~1articles~1%7Bid%7D/get/parameters/0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Article"
    delete:
      tags:
        - Article
      parameters:
        - $ref: "#/paths/~1articles~1%7Bid%7D/get/parameters/0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Article"
  /focus-areas:
    get:
      tags:
        - Focus Area
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FocusArea"
  "/focus-areas/{id}":
    get:
      tags:
        - Focus Area
      parameters:
        - name: id
          in: path
          description: Focus Area ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FocusArea"
  /disciplines:
    get:
      tags:
        - Discipline
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Discipline"
  "/diciplines/{id}":
    get:
      tags:
        - Discipline
      parameters:
        - name: id
          in: path
          description: Discipline ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Discipline"
  /services:
    post:
      tags:
        - Service
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Service"
    get:
      tags:
        - Service
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Service"
  "/services/{id}":
    get:
      tags:
        - Service
      parameters:
        - name: id
          in: path
          description: Service ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Service"
    put:
      tags:
        - Service
      parameters:
        - $ref: "#/paths/~1services~1%7Bid%7D/get/parameters/0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Service"
    delete:
      tags:
        - Service
      parameters:
        - $ref: "#/paths/~1services~1%7Bid%7D/get/parameters/0"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Service"
  /practitoners: {}
  /plans:
    get:
      operationId: get-plans
      tags:
        - Plan
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Plan"
  "/plans/{id}/purchase":
    post:
      operationId: purchase-plan
      tags:
        - Plan
      parameters:
        - name: id
          in: path
          description: Plan ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Plan"
  /admin/profile:
    get:
      operationId: get-profile
      summary: get profile for currently logged in admin
      tags:
        - Admin Profile
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    put:
      operationId: update-profile
      summary: Update profile for currently logged in admin
      tags:
        - Admin Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: mmorissette@example.net
                first_name:
                  type: string
                  example: John
                last_name:
                  type: string
                  example: Doe
                current_password:
                  type: string
                  example: qwerty
                password:
                  type: string
                  example: qwerty1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
